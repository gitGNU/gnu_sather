 ------------------------------------------------------------------------------
 -- Copyright 1995 International Computer Science Institute                  --
 -- Copyright 2007 Michael R. Taylor                                         --
 --                                                                          --
 -- This file is part of GNU Sather (library)                                --
 --                                                                          --
 -- GNU Sather (library) is free software; you can redistribute it and/or    --
 -- modify it under the terms of the GNU Lesser General Public License as    --
 -- published by the Free Software Foundation; either version 3 of the       --
 -- License, or (at your option) any later version.                          --
 --                                                                          --
 -- GNU Sather (library) is distributed in the hope that it will be useful,  --
 -- but WITHOUT ANY WARRANTY; without even the implied warranty of           --
 -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser  --
 -- General Public License for more details.                                 --
 --                                                                          --
 -- You should have received a copy of the GNU Lesser General Public License --
 -- along with this program. If not, see <http://www.gnu.org/licenses/>.     --
 ------------------------------------------------------------------------------

-- ANSI C interface - universal (void *) pointer type
-- Author: Benedict A. Gomes <gomes@samosa.ICSI.Berkeley.EDU>

immutable class C_PTR is
   -- A pointer to void in C (void*)
   -- Pointer arithmetic is missing for C pointer types. Feel free to
   -- add it if it becomes necessary
   include COMPARABLE;

   zero:SAME is builtin C_PTR_ZERO; end;
   is_eq(p:SAME):BOOL is builtin C_PTR_IS_EQ; end;   
   
end;
-------------------------------------------------------------------
partial class C_PTR_CONVERT is
   -- Partial class that implements conversions to and from C_PTR 
   -- i.e. (void *)
   
   create(vptr:C_PTR):SAME is
      -- create from void*
      -- Convert (i.e. cast) "vptr" to be of the type of SAME
      builtin CONVERT_FROM_C_PTR_CREATE_C_PTR;
   end;

   c_ptr:C_PTR is
      -- Convert (i.e. cast) this pointer to be of type C_PTR
      builtin CONVERT_TO_C_PTR;
   end;
   
end;
-------------------------------------------------------------------
immutable class C_SIZE_T is
   -- Corresponds to size_t
end;
-------------------------------------------------------------------
immutable class C_PTRDIFF_T is
   -- Corresponds to ptrdiff_t
end;
-------------------------------------------------------------------
