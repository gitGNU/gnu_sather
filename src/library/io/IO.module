 ------------------------------------------------------------------------------
 -- Copyright 1994 International Computer Science Institute                  --
 -- Copyright 2007 Michael R. Taylor                                         --
 --                                                                          --
 -- This file is part of GNU Sather (compiler)                               --
 --                                                                          --
 -- GNU Sather (compiler) is free software; you can redistribute it and/or   --
 -- modify it under the terms of the GNU General Public License as           --
 -- published by the Free Software Foundation; either version 3 of the       --
 -- License, or (at your option) any later version.                          --
 --                                                                          --
 -- GNU Sather (compiler) is distributed in the hope that it will be useful, --
 -- but WITHOUT ANY WARRANTY; without even the implied warranty of           --
 -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU         --
 -- General Public License for more details.                                 --
 --                                                                          --
 -- You should have received a copy of the GNU General Public License        --
 -- along with this program. If not, see <http://www.gnu.org/licenses/>.     --
 ------------------------------------------------------------------------------

(*

IO CLASSES

The most commonly used IO class in Sather is OUT, as seen in the
hello world program:

    #OUT + "Hello world.\n";

ERR works the same as OUT except output goes to standard error.

IN provides methods for getting input from standard in.  If you
are looking for exotic ways to parse input, take a look at
STR_CURSOR in Strings.  Instead of providing lots of ways to
read in different kinds of values, the Sather idiom is to read
in the whole file in one gulp into memory and parse it there as
a string.  For most purposes this works well.

FILE can be used to access files in a Unixish way.  BFILE is an
equivalent for binary files (the difference shows up in portability
issues.)  Both of these will probably be replaced by a more general
and portable file/directory mechanism in the future.

*)

-- This is a list of library files that can automatically
-- be loaded by a reference in users' SATHER_COMMANDS env variable

    err.sa -has err.sa ERR C_ERR
    file.sa -has file.sa FILE BFILE C_FILE
    in.sa -has in.sa IN C_IN
    out.sa -has out.sa OUT C_OUT
    stream.sa -has stream.sa $OSTREAM
    str_stream.sa -has str_stream.sa STR_STREAM
