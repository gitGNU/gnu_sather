 ------------------------------------------------------------------------------
 -- Copyright 199x International Computer Science Institute                  --
 -- Copyright 2007 Michael R. Taylor                                         --
 --                                                                          --
 -- This file is part of GNU Sather (compiler)                               --
 --                                                                          --
 -- GNU Sather (compiler) is free software; you can redistribute it and/or   --
 -- modify it under the terms of the GNU General Public License as           --
 -- published by the Free Software Foundation; either version 3 of the       --
 -- License, or (at your option) any later version.                          --
 --                                                                          --
 -- GNU Sather (compiler) is distributed in the hope that it will be useful, --
 -- but WITHOUT ANY WARRANTY; without even the implied warranty of           --
 -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU         --
 -- General Public License for more details.                                 --
 --                                                                          --
 -- You should have received a copy of the GNU General Public License        --
 -- along with this program. If not, see <http://www.gnu.org/licenses/>.     --
 ------------------------------------------------------------------------------

class SYSTEM_LEX is

    private attr lex_state:INT; 
        -- 0 for default, 1 for in comment, 2 for in string
    private attr buf:FSTR;
	-- contents of the file being parsed
    private attr pos:INT;
	-- current read position
    private attr name:STR;
	-- Name of the file

    create(s:STR):SAME is
        res::=new;
	res.name:=s;
        f::=BFILE::open_for_read(s);
        if f.error then barf("Couldn't open system file "+s); end;
        res.lex_state:=0;
	res.buf:=f.fstr;
	res.pos:=0;
        return res;
    end;

    get_str:STR is
	-- ignore comments and whitespace and read in a
	-- quote-delimited string.  When the last string has been
	-- read, this returns void.

	c:CHAR;
	tmp::=#FSTR;

	loop
	    until!(pos>=buf.size);
	    c:=buf[pos];
	    pos:=pos+1;
	    case lex_state
                when 0 then
		    case c
			when '-' then lex_state:=1;
			when '\"' then lex_state:=2;
			when '\n',' ','\t','\r','\\' then
			else barf("Illegal character "+c.pretty
				        +" in input file "+name);
		    end;
		when 1 then
		    case c
			when '\n','\r' then lex_state:=0;
			else 
		    end;
		when 2 then
		    case c 
			when '\"' then lex_state:=0; return tmp.str;
			when '\\' then -- ignore backslashes
			else tmp:=tmp+c;
		    end;
		else barf("Unknown lex state in back end");
	    end;
	end;
        return void;
    end;

    elt!:STR is
        loop
            s::=get_str;
            if void(s) then quit;
            else yield s;
            end;
        end;
    end;

    private barf(msg:STR) is
	#ERR + msg + '\n';
	UNIX::exit(1);
    end;

end; -- SYSTEM_LEX
